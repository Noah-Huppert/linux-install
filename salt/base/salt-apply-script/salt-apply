#!/usr/bin/env bash
#?

#?

# Exit on any error
set -e

# Configuration
post_args=()
states=()
pillars=()

# Helpers
function die() {
    echo "Error: $@" >&2
    exit 1
}

# Options
while getopts "tls:p:h" opt; do
    case "$opt" in
	t) post_args+=("test=True") ;;
	l) post_args+=("-l trace") ;;
	s) states+=("$OPTARG") ;;
	p) pillars+=("$OPTARG") ;;
	h) cat <<EOF
salt-apply - Run salt-call with customized options

USAGE

    salt-apply OPTIONS

OPTIONS

   -t           Run states in test mode
   -l           Run state.apply with -l trace option
   -s STATE     State to run, can be provided multiple times
   -p PILLAR    Set pillar values, can be provided multiple times
   -h           Show this help text

BEHAVIOR

   Runs salt-call in local mode with brief output enabled.

EOF
	   exit 0
	   ;;
	'?') die "Unknown option" ;;
    esac
done

# Run
states_arg=""

for state in "${states[@]}"; do
    if [ -n "$states_arg" ]; then
	   states_arg+=","
    fi
    states_arg+="$state"
done

if [ -n "$states_arg" ]; then
    post_args+=("$states_arg")
fi

pillars_arg=""

for pillar in "${pillars[@]}"; do
    if [ -n "$pillars_arg" ]; then
	   pillars_arg+=","
    fi
    pillars_arg+="$pillar"
done

if [ -n "$pillars_arg" ]; then
    post_args+=("pillars=$pillars_arg")
fi

set -x
exec salt-call --local --state-output=changes state.apply "${post_args}"
