#!/usr/bin/env bash

# Configuration
post_args=()
states=()
pillars=()

# Helpers
die() {
    echo "Error: $@" >&2
    exit 1
}

check() {
    if [ "$?" -ne 0 ]; then
	   die "$@"
    fi
}

# Options
env_flag_file="{{ pillar.linux_install_repo.directory }}/environment-flag"
setup_environment=base
if [ -f "$env_flag_file" ]; then
    setup_environment=$(cat "$env_flag_file")
    check "Failed to read default environment option flag file"
fi

while getopts "tls:p:e:h" opt; do
    case "$opt" in
	t) post_args+=("test=True") ;;
	l) post_args+=("-l trace") ;;
	s) states+=("$OPTARG") ;;
	p) pillars+=("$OPTARG") ;;
	e) setup_environment="$OPTARG" ;;
	h) cat <<EOF
salt-apply - Run salt-call with customized options.

USAGE

    salt-apply OPTIONS

OPTIONS

   -t           Run states in test mode.
   -l           Run state.apply with -l trace option.
   -s STATE     State to run, can be provided multiple times.
   -p PILLAR    Set pillar values, can be provided multiple times.
   -e ENV       Salt environment to use. See below for details on the
                default value.
   -h           Show this help text.

BEHAVIOR

   Runs salt-call in local mode with brief output enabled.

   Looks at the "$env_flag_file" file to determine the salt and pillar 
   environment if the -e option is not provided. If this flag file is 
   not present defaults to "base".

EOF
	   exit 0
	   ;;
	'?') die "Unknown option" ;;
    esac
done

# Setup run arguments
run_args=()

# Add states to run args
states_arg=""

for state in "${states[@]}"; do
    if [ -n "$states_arg" ]; then
	   states_arg+=","
    fi
    states_arg+="$state"
done

if [ -n "$states_arg" ]; then
    run_args+=("$states_arg")
fi

# Add pillars to run args
pillars_arg=""

for pillar in "${pillars[@]}"; do
    if [ -n "$pillars_arg" ]; then
	   pillars_arg+=","
    fi
    pillars_arg+="$pillar"
done

if [ -n "$pillars_arg" ]; then
    run_args+=("pillars=$pillars_arg")
fi

# Add environment args
post_args+=("saltenv=$setup_environment")
post_args+=("pillarenv=$setup_environment")

# Add post arguments
for arg in "${post_args[@]}"; do
    run_args+=("$arg")
done

# Run
set -x
exec salt-call --local --state-output=changes state.apply "${run_args[@]}"
