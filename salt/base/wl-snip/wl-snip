#!/usr/bin/env bash
die() {
    echo "Error: $@" >&2
    exit 1
}

check() {
    if [[ "$?" != 0 ]]; then
	   die "$@"
    fi
}

NOTIFY_SWAYNAG="swaynag"
NOTIFY_NOTIFY_SEND="notify-send"

while getopts "hn:" opt; do
    case "$opt" in
	   h) cat <<EOF
wl-snip - Grab a screenshot from Wayland.

USAGE

    wl-snip [-h,-n NOTIFY] [OUT]

OPTIONS

    -h    Show this help text.
    -n NOTIFY    Indicates if a notification will be sent indicating where the screenshot is, the value indicates how the notification will be sent (either: swaynag, or notify-send) 

ARGUMENTS

    OUT    Output file. Defaults to a file named %Y-%m-%d-%k-%M-%S.png saved in the
           \$HOME/pictures/screenshots/ if the directory exists otherwise saved in the 
           current directory.

BEHAVIORS

    Required programs: grim, slurp and swaynag or notify-send (depending on -n option).

EOF
		 exit 0
		 ;;
	   n)
		  if [[ "$OPTARG" != "$NOTIFY_SWAYNAG" ]] && [[ "$OPTARG" != "$NOTIFY_NOTIFY_SEND" ]]; then
			 die "-n NOTIFY only accepts: '$NOTIFY_SWAYNAG' or '$NOTIFY_NOTIFY_SEND'"
		  fi
		  
		  opt_notify="$OPTARG"
		  ;;
	   *) die "Unknown option" ;;
    esac
done

shift $((OPTIND-1))

OUT="$1"
shift
if [ -z "$OUT" ]; then
    file_name="$(date +'%Y-%m-%d-%H-%M-%S').png"
    def_dir="$HOME/pictures/screenshots"
    if [ -d "$def_dir" ]; then
	   OUT="$def_dir/$file_name"
    else
	   OUT="$PWD/$file_name"
    fi
fi

grim -g "$(slurp)" "$OUT"
check "Failed to take screenshot"
echo "$OUT"

case "$opt_notify" in
    "$NOTIFY_SWAYNAG")
	   swaynag \
	   -m "Screenshot saved in $OUT" \
	   -t ok \
	   -z "Copy path" "echo -n $OUT | wl-copy"  \
	   -z "View" "ristretto $OUT"
	   ;;
    "$NOTIFY_NOTIFY_SEND")
	   action=$(notify-send \
		  "Screenshot saved" "In $OUT" \
		  --wait \
		  --action "View" \
		  --icon "$OUT")
	   if [[ "$action" == "0" ]]; then
		  xdg-open "$OUT"
	   fi
	   ;;
esac
if [ -n "$opt_nag" ]; then
    
fi
